name: Reusable Build
on:
  workflow_call:
    inputs:
      COMMIT_ID:
        required: true
        type: string
      FOR_RELEASE:
        required: true
        type: boolean

jobs:
  build:
    name: Build (${{ matrix.runtime }})
    strategy:
      fail-fast: true
      matrix:
        # WORKAROUND: https://github.com/docker/setup-docker-action/issues/166
        #             https://github.com/docker/actions-toolkit/issues/317
        runtime: [ linux-x64, linux-aarch64 ] #, osx-x64, win-x64 ]
        include:
          - runtime: linux-x64
            os: ubuntu-latest

          - runtime: linux-aarch64
            os: ubuntu-24.04-arm

    #          - runtime: osx-x64
    #            os: macOS-latest
    #
    #          - runtime: win-x64
    #            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.COMMIT_ID }}

      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 24

      #      - name: Set up WSL
      #        if: ${{ matrix.os == 'windows-latest' }}
      #        uses: Vampire/setup-wsl@v5

      - name: Set up Docker
        uses: docker/setup-docker-action@v4
        with:
          daemon-config: |
            {
              "features": {
                "containerd-snapshotter": true
              }
            }

      # Pull the images used by integration tests
      - name: Pull docker:dind
        run: docker pull docker:dind

      - name: Pull ghcr.io/hlesey/busybox
        run: docker pull ghcr.io/hlesey/busybox

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          # Avoid caching the generated artifacts
          path: |
            ~/.m2/repository/*
            !~/.m2/repository/io/github/docker
          key: "${{ matrix.runtime }}-maven-${{ hashFiles('**/pom.xml') }}"

      # Maven command-line options:
      # --batch-mode: recommended in CI to inform maven to not run in interactive mode (less logs)
      # -V: strongly recommended in CI, will display the JDK and Maven versions in use.
      # -Dsurefire.useFile=false: useful in CI. Displays test errors in the logs directly (instead of
      #                           having to crawl the workspace files to see the cause).
      # -e: Display stack-traces on failure
      # -P release: activate the "release" profile
      - name: Build
        shell: bash
        run: |
          PROFILE=""          
          if [[ "${{ inputs.FOR_RELEASE }}" == "true" ]]; then
            PROFILE="-P release"
          fi
          ./mvnw verify --batch-mode -V -e "-Dsurefire.useFile=false" ${PROFILE}

      - name: Publish test results
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Unit tests
          reporter: java-junit
          path: '**/failsafe-reports/junitreports/*.xml'

      - uses: actions/upload-artifact@v4
        if: ${{ inputs.FOR_RELEASE }}
        with:
          name: ${{ matrix.runtime }}-bundle
          path: |
            ~/.m2/repository/io/github/canister/
            !~/.m2/repository/io/github/canister/**/maven-metadata-local.xml
            !~/.m2/repository/io/github/canister/**/_remote.repositories
            !~/.m2/repository/io/github/canister/**/*.lastUpdated
          if-no-files-found: error
          retention-days: 1